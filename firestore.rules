rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 사용자 인증 확인 함수
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // 기존 규칙들...
    match /{document=**} {
      allow read, write: if false;
    }
    
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    match /posts/{postId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    match /comments/{commentId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
    
    // 포인트 교환 요청에 대한 규칙
    match /exchangeRequests/{requestId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() 
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.points >= 5000
        && request.resource.data.status == 'pending';
      allow update: if isAuthenticated() 
        && (request.auth.uid == resource.data.userId || request.auth.token.admin == true)
        && (
          // 사용자는 자신의 요청만 취소할 수 있음
          (request.auth.uid == resource.data.userId && request.resource.data.status == 'cancelled') ||
          // 관리자는 모든 상태로 변경 가능
          (request.auth.token.admin == true)
        );
    }
  }
} 